import os

for i in ['/usr/local/bin', '/usr/local/games', '/opt/bin', '/usr/sbin', '/sbin',
          $HOME + '/opt/bin', $HOME + '/.local/bin',
          $HOME + '/.gem/ruby/2.1.0/bin', $HOME + '/.cargo/bin',
          $HOME + '/.guix-profile/bin', $HOME + '/.guix-profile/sbin']:
    if i not in $PATH: $PATH.insert(0, i)
if 'INFOPATH' not in ${...}: $INFOPATH = []
if 'MANPATH' not in ${...}: $MANPATH = []
for i in [$HOME + '/.guix-profile/share/info']:
    if i not in $INFOPATH: $INFOPATH.insert(0, i)
for i in ['/usr/share/man', '/usr/local/man',
          $HOME + '/opt/share/man', $HOME + '/.guix-profile/share/man']:
    if i not in $MANPATH: $MANPATH.insert(0, i)
if 'XDG_RUNTIME_DIR' not in ${...}:
    $XDG_RUNTIME_DIR = '/tmp/_' + $USER + '_runtime'
    if not os.path.isdir($XDG_RUNTIME_DIR):
        mkdir $XDG_RUNTIME_DIR
        chmod 0700 $XDG_RUNTIME_DIR

if $TERM == 'screen': $TERM = 'screen-256color'
$PROMPT = '{env_name:{} }{branch_color}{curr_branch:{} }{WHITE}{cwd}{NO_COLOR} '

$EDITOR = 'emacsclient -nc'
$PAGER = 'less'
$VISUAL = 'emacsclient -nc'
$BASH_COMPLETIONS = '/usr/share/bash-completion/completions'
$GUILE_AUTO_COMPILE = '0'
$GUIX_LOCPATH = $HOME + '/.guix-profile/lib/locale'
$LESS = '-imRS'  # icase search,verbose,rawcolor,chop
$LESSHISTFILE = '-'
$LS_COLORS = eval($(dircolors -c $HOME/.config/dircolors).split()[-1])
$PKG_CONFIG_PATH = '/usr/local/lib/pkgconfig'
$TERMINAL = 'st'
$VIRTUALENV_HOME = $HOME + '/env'

def _c(args, stdin=None):
    where = $HOME if not args else args[0]
    limit = 256
    count = len(os.listdir(where))
    cd @(where) and \
        (![l] if count <= limit else
         print('skipping ls ({0} entries > {1})'.format(count, limit)))

def _qmk_flash(args, stdin=None):
    if not args:
        print('no file given')
    else:
        sudo dfu-programmer atmega32u4 erase and \
            sudo dfu-programmer atmega32u4 flash @(args[0]) and \
            sudo dfu-programmer atmega32u4 reset


aliases['0clock'] = 'sh -c \"echo "$(date +%s)"; echo "  UTC:       $(TZ=UTC date)"; echo "$(tput bold)* Here:      $(date)$(tput sgr0)"; echo "  London:    $(TZ=Europe/London date)"; echo "  Los Angls: $(TZ=America/Los_Ange    les date)"; echo "  New York:  $(TZ=America/New_York date)"; echo "  Riyadh:    $(TZ=Asia/Riyadh date)"; echo "  Seoul:     $(TZ=Asia/Seoul date)"\"'
aliases['0fonts'] = "sh -c \"fc-list | sed 's/^.\+: //;s/:.\+$//;s/,.*$//' | sort -u | pr -2 -T\""
aliases['0ip'] = 'wget -qO - https://ipinfo.io/ip'
aliases['0top-c'] = "sh -c \"ps -Ao pcpu,stat,time,pid,cmd --sort=-pcpu,-time | sed '/^ 0.0 /d'\""
aliases['0top-d'] = "sh -c \"du -kx | rg -v '\./.+/' | sort -rn\""
aliases['0top-m'] = "sh -c \"ps -Ao rss,vsz,pid,cmd --sort=-rss,-vsz | awk '{if($1>5000)print;}'\""
aliases['0qmk-build'] = "sh -c \"docker run -e keymap=agaric -e subproject=rev4 -e keyboard=planck --rm -v $HOME/src/qmk_firmware:/qmk:rw edasque/qmk_firmware\""
aliases['0qmk-flash'] = _qmk_flash
#aliases['0steam'] = 'STEAM_RUNTIME=1 STEAM_RUNTIME_PREFER_HOST_LIBRARIES=1 steam'
aliases['cp']     = 'cp -iv'
aliases['diff']   = 'diff --color'
aliases['dmesg']  = 'dmesg --color=always'
aliases['e']      = 'emacsclient -nc'
aliases['g']      = 'git'
aliases['guile']  = 'rlwrap guile'
aliases['ls']     = 'ls --color=auto'
aliases['l']      = 'ls -A'
aliases['ll']     = 'ls -lh'
aliases['lla']    = 'll -a'
aliases['lls']    = 'll -S'
aliases['llt']    = 'll -t'
aliases['lein']   = 'rlwrap lein'
aliases['mv']     = 'mv -iv'
aliases['pstree'] = 'pstree -hnp'
aliases['rg']     = 'rg --colors match:fg:white --colors match:style:nobold --colors path:style:bold --colors line:fg:yellow'
aliases['rm']     = 'rm -i'
aliases['sbcl']   = 'rlwrap sbcl'
aliases['tclsh']  = 'rlwrap tclsh'
aliases['v']      = 'vim'
aliases['c']      = _c
aliases[',']      = 'c ..'
aliases[',,']     = 'c ../..'
aliases[',,,']    = 'c ../../..'
aliases[',,,,']   = 'c ../../../..'
aliases[',,,,,']  = 'c ../../../../..'
aliases[',,,,,,'] = 'c ../../../../../..'

xontrib load vox

# autologin on tty1
if $(tty) == '/dev/tty1\n' and 'DISPLAY' not in ${...}:
    # invoke keychain
    for i in $(keychain --eval --quick --quiet --agents ssh id_rsa).split():
        if '=' in i:
            s = i.split('=')
            ${s[0]} = s[-1].strip(';')

    # start x
    mv -f $HOME/.xlog $HOME/.xlog.old > /dev/null 2> /dev/null
    xinit > /dev/null 2> $HOME/.xlog
