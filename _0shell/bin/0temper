#! /usr/bin/env tclsh

# taken from https://www.verot.net/firefox_tmpfs.htm

source $::env(HOME)/bin/lib.tcl

need rsync

set home $::env(HOME)
set where $TMPD
set flag .unpacked
set what qutebrowser
set once "\"$home/.local/share/$what/sessions/default.yml \
            $home/bak/${what}_session.yml\""
#         parent                     link      stat       vola
set cont "\"$home/.local/share/$what webengine _webengine $where/$what\" \
          \"$home/.cache/$what       webengine _webengine $where/$what-cache\""

proc log {msg} {
  global ME LOGW

  set f [open $LOGW a]
  puts $f "$ME: $msg"
  close $f
}

proc to_disk {link stat flag} {
  global LOGW

  if {[catch {exec >>&$LOGW rsync --archive --verbose --delete --exclude $flag ./$link/ ./$stat/}]} {
    log {error copying to disk}
  }
}

proc to_mem {stat link flag} {
  log {omitting to-mem rsync messages}
  if {[catch {exec >&/dev/null rsync --archive ./$stat/ ./$link/}]} {
    log {error copying to mem}
  }
  # touch flag
  close [open $link/$flag a]
}

proc backup {src dst} {
  file copy -force -- $src $dst
}

proc refresh {root link stat vola} {
  global flag

  file mkdir $vola
  file attributes $vola -permissions 00700

  cd $root

  if {{link} ne [file type $link] || $vola ne [file readlink $link]} {
    file rename $link $stat
    file link $link $vola
  }

  if {[file exists $link/$flag]} {
    to_disk $link $stat $flag
    return
  }
  to_mem $stat $link $flag
}

file mkdir $where
foreach i $once {
  set src [lindex $i 0]
  set dst [lindex $i 1]
  log "(once) $src -> $dst"
  backup $src $dst
}
foreach i $cont {
  set root [lindex $i 0]
  set link [lindex $i 1]
  log "(cont) $root/$link"
  refresh $root $link [lindex $i 2] [lindex $i 3]
}
